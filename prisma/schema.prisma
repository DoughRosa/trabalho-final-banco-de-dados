generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id String @id @default(uuid()) @db.Uuid
  token String?
  email String @unique
  password String @db.VarChar(100)
  name String @db.VarChar(100)
  tweets Tweets[]
  likes Likes[]
  replies Replies[]
  followers Followers[] @relation("follower")
  following Followers[] @relation("following")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  @@map("users")
}

enum TweetType {
  Tweet
  Reply
}

model Tweets {
  id String @id @default(uuid()) @db.Uuid
  user Users @relation(fields: [userId], references: [id])
  userId String @db.Uuid
  content String @db.VarChar(100)
  tweetType TweetType @default(Tweet) @map("tweet_type")
  likes Likes[]
  replies Replies[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  @@map("tweets")
}

model Likes {
  id String @id @default(uuid()) @db.Uuid
  tweet Tweets @relation(fields: [tweetId], references: [id])
  tweetId String @db.Uuid
  user Users @relation(fields: [userId], references: [id])
  userId String @db.Uuid

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  @@map("likes")
}

model Replies {
  id String @id @default(uuid()) @db.Uuid
  user Users @relation(fields: [userId], references: [id])
  userId String @db.Uuid
  content String @db.VarChar(100)
  tweet Tweets @relation(fields: [tweetId], references: [id])
  tweetId String @db.Uuid

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  @@map("replies")
}

model Followers {
  id String @id @default(uuid()) @db.Uuid
  user Users @relation(name: "follower", fields: [userId], references: [id])
  userId String @db.Uuid
  followerId String @db.Uuid @map("follower_id")
  followingId Users @relation(name: "following", fields: [followerId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  @@map("followers")
}